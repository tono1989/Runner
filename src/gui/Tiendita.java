/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import com.mysql.jdbc.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Properties;
import javax.swing.table.DefaultTableModel;
import tiendita.BD;
import tiendita.Producto;
import tiendita.TienditaException;

/**
 *
 * @author ubuntu
 */
public class Tiendita extends javax.swing.JFrame {

    Connection conn = null;
    String usuario = "root";
    String contraseña = "ciortv";
    
    /**
     * Creates new form Tiendita
     */
    public Tiendita() 
    throws TienditaException, SQLException{
        
        Properties connectionProps = new Properties();
        connectionProps.put("user", this.usuario);
        connectionProps.put("password", this.contraseña);
        
        conn = (Connection) DriverManager.
            getConnection("jdbc:mysql://localhost:3306/tienda_vaca", connectionProps);
        System.out.println("Connected to database");
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        buttonQuitarVender = new javax.swing.JButton();
        textUpcVender = new javax.swing.JTextField();
        buttonVender = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaDeProductos = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lableTotal = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        buttonBuscarAdmin = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableAdmin = new javax.swing.JTable();
        buttonQuitarAdmin = new javax.swing.JButton();
        textUpcAdmin = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        buttonGuardarAdmin = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableAgregar = new javax.swing.JTable();
        buttonGuardarAgregar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                focoUpcVender(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        buttonQuitarVender.setText("Quitar");
        buttonQuitarVender.setToolTipText("Quitar producto seleccionado");
        buttonQuitarVender.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonQuitarVenderMouseClicked(evt);
            }
        });

        textUpcVender.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                agregarALaLista(evt);
            }
        });

        buttonVender.setText("Vender");

        listaDeProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UPC", "Nombre", "Cantidad", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(listaDeProductos);

        jLabel7.setText("UPC");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel8.setText("Total");

        lableTotal.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lableTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lableTotal.setText("$ 0.0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel7)
                        .addGap(4, 4, 4)
                        .addComponent(textUpcVender, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonVender)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonQuitarVender))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(294, 294, 294)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(lableTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lableTotal))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonQuitarVender)
                    .addComponent(textUpcVender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonVender)
                    .addComponent(jLabel7))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Vender", jPanel1);

        buttonBuscarAdmin.setText("Buscar");
        buttonBuscarAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonBuscarAdminMouseClicked(evt);
            }
        });

        tableAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UPC", "Existencias", "Nombre", "Precio", "Costo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableAdmin);

        buttonQuitarAdmin.setText("Quitar");
        buttonQuitarAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonQuitarAdminMouseClicked(evt);
            }
        });

        textUpcAdmin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textUpcAdminKeyReleased(evt);
            }
        });

        jLabel6.setText("UPC");

        buttonGuardarAdmin.setText("Guardar");
        buttonGuardarAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonGuardarAdminMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textUpcAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonBuscarAdmin))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(buttonQuitarAdmin)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buttonGuardarAdmin))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textUpcAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(buttonBuscarAdmin))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonGuardarAdmin)
                    .addComponent(buttonQuitarAdmin))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Administrar", jPanel2);

        tableAgregar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "UPC", "Existencias", "Nombre", "Precio", "Costo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tableAgregar);

        buttonGuardarAgregar.setText("Guardar");
        buttonGuardarAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonGuardarAgregarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonGuardarAgregar)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonGuardarAgregar)
                .addGap(27, 27, 27))
        );

        jTabbedPane1.addTab("Agregar", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarALaLista(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_agregarALaLista

        char code = evt.getKeyChar();
        Producto producto;
        String upc = textUpcVender.getText();
        DefaultTableModel modelo;
        float suma = Float.parseFloat(lableTotal.getText().substring(1));
        String cell = null;
        int cantidad = 0;
        boolean existeUPC = true;
        
        try{
            if (code  == 10 || code == 13){
                producto = new Producto(conn,upc);
                modelo = (DefaultTableModel)listaDeProductos.getModel();
                
                for (int i = 0; i< modelo.getRowCount() && existeUPC; i++)
                {
                    cell = (String)modelo.getValueAt(i, 0);
                    if (cell.equalsIgnoreCase(upc)){
                        // TODO investigar porque pasa los siguientee
                        //String q = modelo.getValueAt(i, 2).toString();
                        cantidad = Integer.parseInt(modelo.getValueAt(i, 2).toString());
                        cantidad ++;
                        modelo.setValueAt(cantidad + "", i, 2);   
                        existeUPC = false;
                    }
                }
                
                if (existeUPC)
                    modelo.addRow(producto.getArrayVender());
                
                textUpcVender.setText("");
                
                suma += producto.getPrecio() ;
                lableTotal.setText("$ " + suma );
                
            }
        }catch(SQLException e){
            TienditaException.reportaError(e.getMessage() );
        }catch(Exception e){
            int a = 1+1;
            System.out.println("poque");
        }
        
    }//GEN-LAST:event_agregarALaLista

    private void focoUpcVender(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_focoUpcVender
        textUpcVender.requestFocus();
    }//GEN-LAST:event_focoUpcVender

    private void buttonQuitarVenderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonQuitarVenderMouseClicked
        
        DefaultTableModel modelo = 
                (DefaultTableModel)listaDeProductos.getModel();
        int row = listaDeProductos.getSelectedRow();
        int cantidad;
        float total = Float.parseFloat(lableTotal.getText().substring(1));
        float precio;
        
        
        if(row != -1){
            precio = (Float)modelo.getValueAt(row, 3);
            cantidad = Integer.parseInt(modelo.getValueAt(row, 2).toString())-1;
            total -= precio;
            lableTotal.setText("$ " +Float.toString(total));
            
            if(cantidad == 0){
                modelo.removeRow(row);
            }else{
                modelo.setValueAt(cantidad, row, 2);
            }
        }
    }//GEN-LAST:event_buttonQuitarVenderMouseClicked

    private void buttonGuardarAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonGuardarAgregarMouseClicked
        
        Producto p;
        
        DefaultTableModel modelo = (DefaultTableModel)tableAgregar.getModel();
        int num_row = modelo.getRowCount();
        
        String upc;
        int existencias;
        String nombre;
        float precio;
        float costo;
        
        for (int row = 0; row < num_row; row++){
            try{
                if( modelo.getValueAt(row, 0) != null&&
                        modelo.getValueAt(row,1) != null &&
                        modelo.getValueAt(row,2) != null &&
                        modelo.getValueAt(row,3) != null&&
                        modelo.getValueAt(row,4) != null){
                    
                    //Si las cadenas son muy largas no se guardan en la base
             
                    upc = (String)modelo.getValueAt(row, 0);
                    existencias = (Integer)modelo.getValueAt(row,1);
                    nombre = (String)modelo.getValueAt(row,2);
                    precio = (Float)modelo.getValueAt(row,3);
                    costo = (Float)modelo.getValueAt(row,4);


                    p = new Producto(upc,existencias,nombre,precio,costo); 
                    p.agregar(conn);

                    modelo.setValueAt(null,row,0);
                    modelo.setValueAt(null,row,1);
                    modelo.setValueAt(null,row,2);
                    modelo.setValueAt(null,row,3);
                    modelo.setValueAt(null,row,4);
                }
            }catch(SQLException e){
                TienditaException.reportaError(e.getMessage());
            }
        }
    }//GEN-LAST:event_buttonGuardarAgregarMouseClicked

    private void buttonBuscarAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonBuscarAdminMouseClicked
        try{
            if (conn == null) conn = BD.conectar(usuario, contraseña);
            String upc = textUpcAdmin.getText();
            Producto p = new Producto(conn,upc );
            
            DefaultTableModel modelo = (DefaultTableModel) tableAdmin.getModel();
            int num_row = modelo.getRowCount();
            if (num_row == 0 )
                modelo.addRow(p.getArray());
            
            for (int row = 0; row < num_row; row++){
                if (! upc.equalsIgnoreCase((String)modelo.getValueAt(row, 0))){
                    modelo.addRow(p.getArray());
                    break;
                }
            }
        }catch(SQLException e){
            TienditaException.reportaError("No se pudo crear producto." + e.getMessage());
        }catch(TienditaException e){
            TienditaException.reportaError("Se perdio la coneccion a la base de datos" + e.getMessage());
        }
    }//GEN-LAST:event_buttonBuscarAdminMouseClicked

    private void buttonQuitarAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonQuitarAdminMouseClicked
        
        DefaultTableModel modelo = (DefaultTableModel) tableAdmin.getModel();
        int row = tableAdmin.getSelectedRow();
        
        if (row != -1){
            modelo.removeRow(row);
        }
    }//GEN-LAST:event_buttonQuitarAdminMouseClicked

    private void buttonGuardarAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonGuardarAdminMouseClicked
        
        Producto p;
        
        DefaultTableModel modelo = (DefaultTableModel)tableAdmin.getModel();
        
        String upc;
        int existencias;
        String nombre;
        float precio;
        float costo;
        
        for (int row = 0; row < modelo.getRowCount(); row++){
            try{
                upc = (String)modelo.getValueAt(row, 0);
                existencias = (Integer)modelo.getValueAt(row,1);
                nombre = (String)modelo.getValueAt(row,2);
                precio = (Float)modelo.getValueAt(row,3);
                costo = (Float)modelo.getValueAt(row,4);
                
                p = new Producto(upc,existencias,nombre,precio,costo); 
                if (conn == null) conn = BD.conectar(usuario, contraseña);
                p.modifacar(conn);
                
                modelo.removeRow(row);
                System.out.println("Producto modificado");
            }catch(SQLException e){
                System.out.println(e.getMessage());
            }catch(TienditaException e){
                BD.reportarError("Se perdio la conexion con la base de datos");
            }
        }
    }//GEN-LAST:event_buttonGuardarAdminMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        BD.desconectar(conn);
        System.out.println("closing");
    }//GEN-LAST:event_formWindowClosing

    private void textUpcAdminKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textUpcAdminKeyReleased
        if(evt.getKeyChar() == 10 ||
                evt.getKeyChar() == 13){
            buttonBuscarAdminMouseClicked(null);
            textUpcAdmin.setText ("");
        }
    }//GEN-LAST:event_textUpcAdminKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tiendita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tiendita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tiendita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tiendita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try{
                    new Tiendita().setVisible(true);
                }catch(Exception e){
                    System.out.println("No se pudo establecer coneccion con "+
                    "la base de datos. "+ e.getMessage());
                }
            }
        });
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBuscarAdmin;
    private javax.swing.JButton buttonGuardarAdmin;
    private javax.swing.JButton buttonGuardarAgregar;
    private javax.swing.JButton buttonQuitarAdmin;
    private javax.swing.JButton buttonQuitarVender;
    private javax.swing.JButton buttonVender;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lableTotal;
    private javax.swing.JTable listaDeProductos;
    private javax.swing.JTable tableAdmin;
    private javax.swing.JTable tableAgregar;
    private javax.swing.JTextField textUpcAdmin;
    private javax.swing.JTextField textUpcVender;
    // End of variables declaration//GEN-END:variables
}
